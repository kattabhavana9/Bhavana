# Import necessary libraries for microcontroller control and sensor integration
from machine import Pin, ADC, PWM
import time

# Define the pins to which your hardware components are connected
infrared_sensor_pin = Pin(12, Pin.IN)
metal_sensor_pin = Pin(14, Pin.IN)
moisture_sensor_pin = ADC(Pin(34))
metal_servo_pin = PWM(Pin(25))
wet_servo_pin = PWM(Pin(26))
dry_servo_pin = PWM(Pin(27))

# Set up the threshold values for sensor data
infrared_threshold = 500  # Adjust this value according to your sensor's readings
moisture_threshold = 2000  # Adjust this value according to your sensor's readings

# Main AWS function
def automated_waste_segregation():
    try:
        while True:
            # Read sensor data
            infrared_value = infrared_sensor_pin.value()
            metal_value = metal_sensor_pin.value()
            moisture_value = moisture_sensor_pin.read()

            # Classify waste based on sensor data
            if infrared_value < infrared_threshold:
                if metal_value:
                    print("Metal waste detected")
                    metal_servo_pin.duty(50)  # Move metal waste flap
                else:
                    if moisture_value > moisture_threshold:
                        print("Wet waste detected")
                        wet_servo_pin.duty(50)  # Move wet waste flap
                    else:
                        print("Dry waste detected")
                        dry_servo_pin.duty(50)  # Move dry waste flap
            else:
                print("No waste detected")

            # Delay between readings
            time.sleep(1)

    except KeyboardInterrupt:
        print("AWS system stopped")

if __name__ == "__main__":
    # Initialize the servo motors
    metal_servo_pin.freq(50)  # Set PWM frequency
    wet_servo_pin.freq(50)
    dry_servo_pin.freq(50)

    metal_servo_pin.duty(0)  # Start with flaps closed
    wet_servo_pin.duty(0)
    dry_servo_pin.duty(0)

    # Start the AWS system
    automated_waste_segregation()
